./core/plugins/evidence_connector_enhancer.py:375:        edge_type = supportive_edges[0] if supportive_edges else 'tests_hypothesis'
./core/plugins/content_based_diagnostic_classifier.py:97:                'consistent with', 'supports', 'evidence for', 'tends to show',
./core/disconnection_repair.py:33:            'supports': ['support', 'evidence for', 'confirm', 'validate'],
./core/disconnection_repair.py:233:                                              if 'support' in e or e == 'tests_hypothesis']
./core/disconnection_repair.py:234:                            edge_type = supportive_edges[0] if supportive_edges else 'tests_hypothesis'
./core/disconnection_repair.py:240:                            edge_type = evidence_edges[0] if evidence_edges else 'tests_hypothesis'
./core/disconnection_repair.py:405:                'Hypothesis': 'tests_hypothesis',  # Use modern edge type
./core/disconnection_repair.py:413:                'Hypothesis': 'tests_hypothesis'
./core/disconnection_repair.py:423:                'Hypothesis': 'tests_hypothesis',
./core/disconnection_repair.py:427:                'Evidence': 'weighs_evidence',
./core/disconnection_repair.py:428:                'Hypothesis': 'weighs_evidence',
./core/disconnection_repair.py:429:                'Causal_Mechanism': 'weighs_evidence'
./core/disconnection_repair.py:440:        return all_edges[0] if all_edges else 'tests_hypothesis'
./core/disconnection_repair.py:854:                valid_combinations[node_pair] = ['weighs_evidence']
./core/disconnection_repair.py:856:                valid_combinations[node_pair] = ['weighs_evidence']
./core/ontology_manager.py:93:        ['supports', 'provides_evidence_for', 'tests_hypothesis', 'updates_probability', 'weighs_evidence']
./core/streaming_html.py:882:            'edges_by_type': {'causes': 30, 'supports': 20}
./tools/migrate_ontology.py:52:            'provides_evidence_for': 'tests_hypothesis',
./tools/migrate_ontology.py:53:            'updates_probability': 'tests_hypothesis',
./tools/migrate_ontology.py:54:            'weighs_evidence': 'tests_hypothesis',
./tools/migrate_ontology.py:55:            'supports': 'tests_hypothesis',
./tools/migrate_ontology.py:57:            'tests_hypothesis': 'tests_hypothesis'
./tools/migration_inventory.py:19:            "grep -r \"'supports'\\|'tests_hypothesis'\\|'provides_evidence_for'\\|'updates_probability'\\|'weighs_evidence'\" --include=\"*.py\" .",
./tools/migration_inventory.py:60:                "description": "Hardcoded 'supports' edge type",
./process_trace_advanced.py:520:                    edge_type = edge_types[0] if edge_types else 'provides_evidence_for'
./process_trace_advanced.py:560:                    relationship_type = edge_types[0] if edge_types else ('enables' if entity_type == 'Condition' else 'provides_evidence_for')
./tests/test_dag_analysis.py:113:        ('evidence1', 'event4', {'edge_type': 'tests_hypothesis', 'weight': 0.7}),
./tests/test_cross_domain.py:39:        ('evidence1', 'hypothesis1', {'edge_type': 'tests_hypothesis', 'weight': 0.9}),
./tests/test_cross_domain.py:96:        ('evidence1', 'hypothesis1', {'edge_type': 'tests_hypothesis', 'weight': 0.8}),
./tests/test_ontology_manager.py:32:            'tests_hypothesis',
./tests/test_ontology_manager.py:33:            'updates_probability', 
./tests/test_ontology_manager.py:34:            'supports',
./tests/test_ontology_manager.py:35:            'provides_evidence_for',
./tests/test_ontology_manager.py:36:            'weighs_evidence'
./tests/test_ontology_manager.py:53:        assert 'tests_hypothesis' in edges
./tests/test_ontology_manager.py:66:        assert 'tests_hypothesis' in edges
./tests/test_ontology_manager.py:67:        assert 'supports' in edges  # Has diagnostic_type property
./tests/test_ontology_manager.py:73:        assert 'tests_hypothesis' in edges
./tests/test_ontology_manager.py:74:        assert 'supports' in edges
./tests/test_ontology_manager.py:91:            'type': 'tests_hypothesis',
./tests/test_ontology_manager.py:120:            'type': 'tests_hypothesis',
./tests/test_ontology_manager.py:135:            'type': 'tests_hypothesis',
./tests/test_ontology_manager.py:149:        props = ontology_manager.get_edge_properties('tests_hypothesis')
./tests/test_ontology_manager.py:161:        required = ontology_manager.get_required_properties('tests_hypothesis')
./tests/test_ontology_manager.py:172:        assert 'tests_hypothesis' in edges
./tests/test_ontology_manager.py:174:        assert 'supports' in edges
./tests/test_ontology_manager.py:182:        assert 'tests_hypothesis' in edges
./tests/test_ontology_manager.py:183:        assert 'supports' in edges
./tests/test_ontology_manager.py:194:        assert 'tests_hypothesis' in edges
./tests/test_ontology_manager.py:195:        assert 'supports' in edges
./tests/test_ontology_manager.py:206:        assert ontology_manager.is_evidence_to_hypothesis_edge('tests_hypothesis') is True
./tests/test_ontology_manager.py:207:        assert ontology_manager.is_evidence_to_hypothesis_edge('supports') is True
./tests/test_ontology_manager.py:224:        label = ontology_manager.get_edge_label('tests_hypothesis')
./tests/test_ontology_manager.py:250:        assert 'tests_hypothesis' in edges
./tests/test_ontology_manager.py:251:        assert 'supports' in edges
./tests/test_ontology_manager.py:283:            'supports',
./tests/test_ontology_manager.py:284:            'provides_evidence_for',
./tests/test_ontology_manager.py:285:            'tests_hypothesis',
./tests/test_ontology_manager.py:286:            'updates_probability',
./tests/test_ontology_manager.py:287:            'weighs_evidence'
./tests/test_ontology_manager.py:298:            'tests_hypothesis',
./tests/test_ontology_manager.py:299:            'supports',  # Has diagnostic_type
./tests/test_ontology_manager.py:306:            if edge in ['supports', 'refutes']:
./tests/plugins/test_van_evera_testing.py:71:                {'source_id': 'E1', 'target_id': 'Q_H1', 'type': 'tests_hypothesis'},
./tests/plugins/test_van_evera_testing.py:72:                {'source_id': 'E2', 'target_id': 'Q_H2', 'type': 'tests_hypothesis'}
./tests/plugins/test_van_evera_testing.py:409:                {'source_id': 'E1', 'target_id': 'H1', 'type': 'tests_hypothesis'},
./tests/plugins/test_evidence_connector_enhancer.py:90:                    'type': 'supports',
./tests/plugins/test_evidence_connector_enhancer.py:342:            assert connection['type'] == 'supports'
./tests/plugins/test_evidence_connector_enhancer.py:445:                    {'source_id': 'E1', 'target_id': 'H1', 'type': 'supports'},
./tests/plugins/test_evidence_connector_enhancer.py:446:                    {'source_id': 'E2', 'target_id': 'H1', 'type': 'supports'},
./tests/plugins/test_evidence_connector_enhancer.py:447:                    {'source_id': 'E3', 'target_id': 'H1', 'type': 'supports'}
./tests/plugins/test_alternative_hypothesis_generator.py:68:                    'type': 'supports',
./tests/plugins/test_alternative_hypothesis_generator.py:338:                if edge.get('target_id') in alternative_ids and edge.get('type') == 'supports':
./tests/plugins/test_content_based_diagnostic_classifier.py:77:                    'type': 'supports',
./tests/plugins/test_content_based_diagnostic_classifier.py:307:                        'type': 'supports',
./tests/plugins/test_content_based_diagnostic_classifier.py:333:                    {'source_id': 'E1', 'target_id': 'H1', 'type': 'supports',
./tests/plugins/test_content_based_diagnostic_classifier.py:335:                    {'source_id': 'E2', 'target_id': 'H1', 'type': 'supports',
./tests/plugins/test_content_based_diagnostic_classifier.py:337:                    {'source_id': 'E3', 'target_id': 'H1', 'type': 'supports',
./tests/plugins/test_content_based_diagnostic_classifier.py:339:                    {'source_id': 'E4', 'target_id': 'H1', 'type': 'supports',
./tests/plugins/test_content_based_diagnostic_classifier.py:450:                        'type': 'supports',
./tests/plugins/test_primary_hypothesis_identifier.py:72:                    'type': 'supports',
./tests/plugins/test_primary_hypothesis_identifier.py:82:                    'type': 'supports',
./tests/plugins/test_primary_hypothesis_identifier.py:91:                    'type': 'supports',
./tests/plugins/test_primary_hypothesis_identifier.py:100:                    'type': 'supports',
./tests/plugins/test_primary_hypothesis_identifier.py:377:                'source_id': 'E1', 'target_id': 'H_TEST', 'type': 'supports',
./tests/plugins/test_primary_hypothesis_identifier.py:382:                'source_id': 'E1', 'target_id': 'H_TEST', 'type': 'supports', 
./tests/plugins/test_primary_hypothesis_identifier.py:693:                    'type': 'supports'
./tests/ontology_test_helpers.py:21:        ['supports', 'tests_hypothesis', 'provides_evidence_for', 'updates_probability', 'weighs_evidence']
./tests/ontology_test_helpers.py:33:        Replaces hardcoded patterns like checking for 'supports' or 'provides_evidence_for'.
./tests/test_van_evera_bayesian_integration.py:193:            'edge_type': 'tests_hypothesis',
./docs/testing/test_all_critical_fixes.py:50:    G.add_edge('E1', 'H1', type='supports', probative_value=0.7)
./docs/testing/test_critical_bug_21.py:23:    G.add_edge('E1', 'H1', type='supports', probative_value=0.7)
./docs/testing/test_critical_bug_34.py:22:    G.add_edge('E1', 'H1', type='supports', probative_value=0.7)
./docs/testing/test_phase2b_integration.py:71:        ('evidence1', 'hypothesis1', {'edge_type': 'supports', 'weight': 0.8}),
./docs/testing/test_phase2b_integration.py:72:        ('evidence2', 'hypothesis1', {'edge_type': 'supports', 'weight': 0.9}),  # Convergence
./docs/testing/test_critical_bug_16.py:26:    G.add_edge('E1', 'H1', type='supports', probative_value=0.7)
./docs/testing/test_direct_integration.py:74:                    'type': 'supports',
